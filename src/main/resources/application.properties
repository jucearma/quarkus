# Configuration file
# key = value
%staging.greetings.message=StagingAloha
%dev.greetings.message=Hola
greetings.message=hello
quarkus.log.console.level=DEBUG
quarkus.log.category."org.acme".level=DEBUG
org.acme.WorldClockService/mp-rest/url=http://worldclockapi.com
org.eclipse.microprofile.rest.client.propagateHeaders=Authorization

# quarkus.datasource.url=jdbc:mariadb://localhost:3306/developer
# quarkus.datasource.driver=org.mariadb.jdbc.Driver
# quarkus.datasource.username=developer
# quarkus.datasource.password=developer
#quarkus.hibernate-orm.database.generation=update
quarkus.datasource.url=jdbc:postgresql://localhost:5432/vacationplaner
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.username=vacationplaner
quarkus.datasource.password=
quarkus.flyway.migrate-at-start=true
quarkus.flyway.schemas=developer
quarkus.flyway.baseline-on-migrate=true

# Configure the Kafka sink (we write to it)
# Write
mp.messaging.outgoing.generated-temperature.connector=smallrye-kafka
mp.messaging.outgoing.generated-temperature.topic=temperature
mp.messaging.outgoing.generated-temperature.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

# Configure the Kafka source (we read from it)
# Read
mp.messaging.incoming.temperature.connector=smallrye-kafka
mp.messaging.incoming.temperature.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

# Autenticacion con Tokens JWT
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
mp.jwt.verify.issuer=https://quarkus.io/using-jwt-rbac
quarkus.smallrye-jwt.enabled=true